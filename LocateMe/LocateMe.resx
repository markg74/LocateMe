<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="button1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <data name="button3.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAC0AAAAsCAMAAADGmMENAAAABGdBTUEAALGPC/xhBQAAAURQTFRFKSwz
        Ki00ODtBVlheYGJnW1xiOz5EKy41Y2Vqv8DC8PDx+vr68/T0pqeqPD5FLTA3XV9k1tbY/v7+7u/v7e7u
        5+fooKGkREdNwsLE/f39xsfIcHN3a25yZmhtQURK5OTl9/f4oaKmLjE4mZue9PT0hoiMMDI5oaKl////
        hoeMLzI5MDM6RUdNm5yfqquuXmBl5eXnzc7PWlxhS05Ux8fJ/Pz8+/v8y8vNYmVqhoeLLTA2zs/R1NTW
        T1FXXmBm3t7fv7/BVVddLC8209PV+/v7zc3QaWtw0tPVTlBWXF5k6enqvr7AUVNZLzI4dXZ74+Pl/f3+
        x8jKWFtgP0FIfX+Dl5ibl5icq6yv4uPk+fn5xMXHQkVLnp+i7u7ufoCE5eXm9vb3ycrMhoiLiYuPREZM
        9PX1i4yQxsfJU1VbzMzOn6Gkv7/ClWfyJgAAAAlwSFlzAAAOwwAADsMBx2+oZAAAAXVJREFUSEu1lWdX
        wjAUhhtBijjAOONALaixonVQt6JY995bca///930EJG0adp4Ds+npvc997y5Se5VKg+oCoVZqiOAxlyo
        0ZpYLUtdfQMNOoknGiFsamZoaY3QqJO2dhTr6Oxi6E56OAHhnt6+pApYaNCFlkLp/jhd+DIwiNNDgdW6
        lFqQG+jDzg3Yag/fmZHRkEq/KbYTD7UxhsYn2JDA92TWnJqeYczYTmb56rnoPDQXFsvNCHwr2lIOwuWV
        PF0SRGoFGKuWuZb4yy6oIEFf38Aou1mS+5yOvrUNrZ3dX7nTSX5PZ9k/gIdHx7QyjnqfnJ6ds1xcInx1
        fVMMs07U2zv6fEpYCGNs3heTs7nl1EGcyO3y/xVkkTod7sl73EHOrRLk5txYgZrzGgRq46HwyHlpT3x1
        JvX8Um6DIKgg0Fz/7dze9XYipyZd8/VNpwtfSEdG7x9BOzLp9rDwGbTb8yfJl9ckIVPqO/iUItZlJmAl
        UJQfZIdbh91rSWkAAAAASUVORK5CYII=
</value>
  </data>
</root>